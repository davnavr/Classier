
namespace blah.blah.blah;

use system.reflection.Assembly;

public module Math {
    let myGlobal: long = 42L; // TODO: Replace these 'let' thngs with properties, meaning only classes will have bodies.

    let three: uint = 03;

    protected def badFormatting ()
                                                ()

                                    (thing: some.really.really.long.name.space.name.MyClass)


                                    {
                                    
                                            }

    public data class MyRecord (item1: string, item2: int, item3: Some.Fancy.Item);

    public data class RecordWithMembers (_happy: boolean) {
        public def myOtherMember () {
          return _happy;
        }
    }

    public def functionTest (f: int => int) {
        f(555)
    }

    // Overloading!
    public def functionTest (f: int => int) (p: int) {
        f (p)
    }
}
