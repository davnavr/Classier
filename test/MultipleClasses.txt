
namespace test;

public class Class1(arg1) {
  printfn(arg1.toString());

  match (arg1) {
    1 => 3;
    3, 4 => 5;
    thing => 6;
    (one, two) => 7;
    "tester" => {
      System.out.println("This might \n not \t work!");
      return 55;
    };
    _ => 0;
  }

  public virtual def myVirtMethod () {
    0
  }
}

/**
 * Maybe this is what documentation comments might look like
 */
public class Class2(arg2, arg3) extends Class1(arg2) {
  let thing = 5;

  public override def myVirtMethod () {
    1
  }
}

public interface Interface1 {
  public def doAThing (thing: theThing): anotherThing;
}

/// Or maybe this style is better?
public class Class3 implements Interface1 {
  private class Nested {
    var parent: Class3;

    internal interface MuchMoreNested {
        
    }
  }
}

public class Class4(arg4) extends Class2(arg4 + 5) implements Interface1 {
  public override sealed def myVirtMethod() => 2;
}

public class Class5 extends Class3 {
  
}

public class Class6 private (arg6) extends Class4(arg6, arg6) {
  
}
